{"version":3,"sources":["utils.js","components/Meta.js","actions/orderActions.js","components/Invoice.js","screens/OrderDetailsScreen.js","components/Message.js","components/Loader.js"],"names":["formatCurrency","amount","currency","currencySymbol","locale","formatter","Intl","NumberFormat","style","currencyCode","formatToParts","find","part","type","value","format","replace","userLocale","navigator","language","userLanguage","Meta","_ref","title","_jsx","Helmet","children","defaultProps","createOrder","paymentIntent","paymentMethod","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","getState","_getState","userInfo","config","_yield$axios$post","data","wrap","_context","prev","next","ORDER_CREATE_REQUEST","userLogIn","headers","Authorization","concat","token","axios","post","sent","ORDER_CREATE_SUCCESS","payload","t0","ORDER_CREATE_FAIL","response","message","stop","_x","_x2","apply","arguments","detailsOrder","id","_ref2","_callee2","_getState2","_yield$axios$get","_context2","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","_x3","_x4","listOrderUser","_ref3","_callee3","_getState3","_yield$axios$get2","_context3","USER_ORDER_LIST_REQUEST","USER_ORDER_LIST_SUCCESS","USER_ORDER_LIST_FAIL","_x5","_x6","listOrderAdmin","_ref4","_callee4","_getState4","_yield$axios$get3","_context4","ADMIN_ORDER_LIST_REQUEST","ADMIN_ORDER_LIST_SUCCESS","ADMIN_ORDER_LIST_FAIL","_x7","_x8","updateOrderStatus","status","_ref5","_callee5","_getState5","_context5","ORDER_STATUS_UPDATE_REQUEST","put","ORDER_STATUS_UPDATE_SUCCESS","ORDER_STATUS_UPDATE_FAIL","_x9","_x10","updatePaymentStatus","_ref6","_callee6","_getState6","_context6","PAYMENT_STATUS_UPDATE_REQUEST","PAYMENT_STATUS_UPDATE_SUCCESS","PAYMENT_STATUS_UPDATE_FAIL","_x11","_x12","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","author","marginBottom","subtitle","marginTop","marginRight","marginLeft","text","margin","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Invoice","_order$paymentIntent","order","Document","_jsxs","Page","Text","fixed","Date","toLocaleString","Table","TableHeader","TableCell","products","TableBody","DataTableCell","getContent","x","product","price","quantity","createdAt","_id","orderStatus","couponApplied","OrderDetailsScreen","_order$orderdBy","_order$orderdBy2","_order$orderdBy3","_order$orderdBy4","_order$orderdBy5","_order$orderdBy6","_order$orderdBy7","_order$paymentIntent2","_order$products","_order$products2","_order$paymentIntent3","useDispatch","navigate","useNavigate","orderId","useParams","useSelector","state","orderDetails","loading","error","orderStatusUpdate","loadingStatus","success","errorStatus","paymentStatusUpdate","loadingPayment","successPayment","errorPayment","useEffect","ORDER_CREATE_RESET","ORDER_STATUS_UPDATE_RESET","PAYMENT_STATUS_UPDATE_RESET","Loader","Message","variant","_Fragment","role","Link","to","className","Row","Col","md","ListGroup","backgroundColor","Item","orderdBy","name","href","email","shipping","address","city","postcode","country","PDFDownloadLink","document","fileName","toLocaleDateString","length","map","item","index","_item$addonData","Image","src","url","alt","fluid","fontWeight","slug","qty","variableData","Badge","addonData","adn","split","reduce","acc","prices","priceAcc","priceItem","cartTotal","totalAfterDiscount","Form","Label","Control","as","onChange","e","target","Alert","size","Spinner","animation"],"mappings":"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","file":"static/js/32.3f844be8.chunk.js","sourcesContent":["export const formatCurrency = (amount, currency, currencySymbol, locale) => {\r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: \"currency\",\r\n    currency: currency, // Replace 'USD' with the appropriate currency code\r\n  });\r\n\r\n  // Extract the currency symbol from the formatted string\r\n  const currencyCode = formatter\r\n    .formatToParts(0)\r\n    .find((part) => part.type === \"currency\").value;\r\n\r\n  // Replace the currency code with the currency symbol in the formatted string\r\n  const formattedAmount = formatter\r\n    .format(amount)\r\n    .replace(currencyCode, currencySymbol);\r\n  return formattedAmount;\r\n};\r\n\r\nexport const userLocale = navigator.language || navigator.userLanguage;\r\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst Meta = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: \"Welcome To Foody\",\n};\n\nexport default Meta;\n","import axios from \"axios\";\nimport {\n  ADMIN_ORDER_LIST_FAIL,\n  ADMIN_ORDER_LIST_REQUEST,\n  ADMIN_ORDER_LIST_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_STATUS_UPDATE_FAIL,\n  ORDER_STATUS_UPDATE_REQUEST,\n  ORDER_STATUS_UPDATE_SUCCESS,\n  PAYMENT_STATUS_UPDATE_FAIL,\n  PAYMENT_STATUS_UPDATE_REQUEST,\n  PAYMENT_STATUS_UPDATE_SUCCESS,\n  USER_ORDER_LIST_FAIL,\n  USER_ORDER_LIST_REQUEST,\n  USER_ORDER_LIST_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const createOrder =\n  (paymentIntent, paymentMethod) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_CREATE_REQUEST });\n      const {\n        userLogIn: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/order`,\n        { paymentIntent, paymentMethod },\n        config\n      );\n      dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const detailsOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n    const {\n      userLogIn: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/order/${id}`, config);\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrderUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_ORDER_LIST_REQUEST });\n    const {\n      userLogIn: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/order`, config);\n    dispatch({ type: USER_ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrderAdmin = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ADMIN_ORDER_LIST_REQUEST });\n    const {\n      userLogIn: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/admin/orderlist`, config);\n    dispatch({ type: ADMIN_ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateOrderStatus = (id, status) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_STATUS_UPDATE_REQUEST });\n    const {\n      userLogIn: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.put(`/api/admin/orderStatus/${id}`, { status }, config);\n    dispatch({ type: ORDER_STATUS_UPDATE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: ORDER_STATUS_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updatePaymentStatus =\n  (id, status) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PAYMENT_STATUS_UPDATE_REQUEST });\n      const {\n        userLogIn: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      await axios.put(`/api/admin/paymentStatus/${id}`, { status }, config);\n      dispatch({ type: PAYMENT_STATUS_UPDATE_SUCCESS });\n    } catch (error) {\n      dispatch({\n        type: PAYMENT_STATUS_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","import React from 'react'\nimport { Document, Page, Text, StyleSheet } from '@react-pdf/renderer'\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  DataTableCell,\n} from '@david.kucsai/react-pdf-table'\n\nconst Invoice = ({ order }) => (\n  <Document>\n    <Page style={styles.body}>\n      <Text style={styles.header} fixed>\n        ~ {new Date().toLocaleString()} ~\n      </Text>\n      <Text style={styles.title}>Order Invoice</Text>\n      <Text style={styles.author}>React Redux Ecommerce - FoodStore</Text>\n      <Text style={styles.subtitle}>Order Summary</Text>\n\n      <Table>\n        <TableHeader>\n          <TableCell>Title</TableCell>\n          <TableCell>Price</TableCell>\n          <TableCell>Quantity</TableCell>\n          <TableCell>Sub Total</TableCell>\n        </TableHeader>\n      </Table>\n\n      <Table data={order.products}>\n        <TableBody>\n          <DataTableCell getContent={(x) => x.product.title} />\n          <DataTableCell getContent={(x) => `$${x.price}`} />\n          <DataTableCell getContent={(x) => x.quantity} />\n          <DataTableCell getContent={(x) => `$${x.price * x.quantity}`} />\n        </TableBody>\n      </Table>\n\n      <Text style={styles.text}>\n        <Text>\n          Date: {'                                               '}\n          {new Date(order.createdAt).toLocaleString()}\n        </Text>\n        {'\\n'}\n        <Text>\n          Order Id: {'                                         '}\n          {order._id}\n        </Text>\n        {'\\n'}\n        <Text>\n          Order Status: {'                                  '}\n          {order.orderStatus}\n        </Text>\n        {'\\n'}\n        <Text>\n          Payment Method: {'                           '}\n          {order.paymentMethod}\n        </Text>\n        {'\\n'}\n        <Text>\n          Payment Status: {'                             '}\n          {order.paymentIntent?.status}\n        </Text>\n        {'\\n'}\n        <Text>\n          Discount Applied: {'                           '}\n          {order.couponApplied ? 'Yes' : 'No'}\n        </Text>\n        {'\\n'}\n        {order.couponApplied ? (\n          <Text>\n            Total Paid On Discount: {'                  '}$\n            {order.paymentIntent && order.paymentIntent.amount / 100}\n          </Text>\n        ) : (\n          <Text>\n            Total Paid: {'                                      '}$\n            {order.paymentIntent && order.paymentIntent.amount / 100}\n          </Text>\n        )}\n      </Text>\n\n      <Text style={styles.footer}> ~ Thank you for shopping with us ~ </Text>\n    </Page>\n  </Document>\n)\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    marginTop: 8,\n    marginRight: 12,\n    marginLeft: 12,\n    marginBottom: 0,\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  footer: {\n    padding: '100px',\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n})\n\nexport default Invoice\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  detailsOrder,\n  updateOrderStatus,\n  updatePaymentStatus,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_CREATE_RESET,\n  ORDER_STATUS_UPDATE_RESET,\n  PAYMENT_STATUS_UPDATE_RESET,\n} from \"../constants/orderConstants\";\nimport { Form, Row, Col, ListGroup, Image, Badge } from \"react-bootstrap\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport Invoice from \"../components/Invoice\";\nimport Meta from \"../components/Meta\";\nimport { formatCurrency, userLocale } from \"../utils\";\n\nconst OrderDetailsScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const { id: orderId } = params;\n\n  const userLogIn = useSelector((state) => state.userLogIn);\n  const { userInfo } = userLogIn;\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { loading, order, error } = orderDetails;\n\n  const orderStatusUpdate = useSelector((state) => state.orderStatusUpdate);\n  const {\n    loading: loadingStatus,\n    success,\n    error: errorStatus,\n  } = orderStatusUpdate;\n\n  const paymentStatusUpdate = useSelector((state) => state.paymentStatusUpdate);\n  const {\n    loading: loadingPayment,\n    success: successPayment,\n    error: errorPayment,\n  } = paymentStatusUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    }\n    if (!order || order._id !== orderId || success || successPayment) {\n      dispatch(detailsOrder(orderId));\n      dispatch({ type: ORDER_CREATE_RESET });\n      dispatch({ type: ORDER_STATUS_UPDATE_RESET });\n      dispatch({ type: PAYMENT_STATUS_UPDATE_RESET });\n    }\n  }, [userInfo, orderId, order, dispatch, success, successPayment, navigate]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <Meta title=\"Food Store | Order Details\" />\n      {userInfo && userInfo.role !== \"admin\" && (\n        <Link to=\"/user/orderhistory\" className=\"btn btn-dark my-3\">\n          Go Back\n        </Link>\n      )}\n\n      <h3>Order: {order._id}</h3>\n      <Row className=\"orderDetails\">\n        <Col md={8}>\n          <ListGroup style={{ backgroundColor: \"#ced6e0\" }}>\n            <ListGroup.Item>\n              <Row className=\"d-flex flex-lg-row flex-md-row flex-sm-column flex-xs-column\">\n                <Col>\n                  <h4>Shipping</h4>\n                  <p>\n                    <strong>Name: </strong> {order.orderdBy?.name}\n                  </p>\n                  <p>\n                    <strong>Email: </strong>{\" \"}\n                    <a href={`mailto:${order.orderdBy?.email}`}>\n                      {order.orderdBy?.email}\n                    </a>\n                  </p>\n                  <p>\n                    <strong>Address:</strong>\n                    {order.orderdBy?.shipping.address},{\" \"}\n                    {order.orderdBy?.shipping.city}{\" \"}\n                    {order.orderdBy?.shipping.postcode},{\" \"}\n                    {order.orderdBy?.shipping.country}\n                  </p>\n                </Col>\n                <Col className=\"d-flex justify-content-md-end align-items-start justify-content-sm-start\">\n                  <PDFDownloadLink\n                    document={<Invoice order={order} />}\n                    fileName=\"invoice.pdf\"\n                    className=\"btn btn-sm btn-primary\"\n                  >\n                    Download Invoice\n                  </PDFDownloadLink>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h4>Order Status</h4>\n              {order.orderStatus && order.orderStatus === \"Not Processed\" ? (\n                <Message variant=\"dark\">Not Processed</Message>\n              ) : order.orderStatus === \"Processing\" ? (\n                <Message variant=\"info\">Processing</Message>\n              ) : order.orderStatus === \"Dispatched\" ? (\n                <Message variant=\"warning\">Dispatched</Message>\n              ) : order.orderStatus === \"Completed\" ? (\n                <Message variant=\"success\">Completed</Message>\n              ) : (\n                <Message variant=\"danger\">Cancelled</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h4>Payment Method</h4>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.paymentIntent &&\n              order.paymentIntent?.status === \"succeeded\" ? (\n                <Message variant=\"success\">\n                  Paid on : {new Date(order.createdAt).toLocaleDateString()}\n                </Message>\n              ) : order.paymentIntent?.status === \"pending\" ? (\n                <Message variant=\"dark\">Pending</Message>\n              ) : (\n                <Message variant=\"danger\">\n                  Error Payment, please contact site owner\n                </Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h4>Order Items</h4>\n              {order.products?.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup>\n                  {order.products?.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.product.image.url}\n                            alt={item.product.title}\n                            fluid\n                          />\n                        </Col>\n                        <Col md={10}>\n                          <Row className=\"d-flex flex-column\">\n                            <Col>\n                              <Row className=\"d-flex flex-row\">\n                                <Col md={9}>\n                                  <span style={{ fontWeight: \"900\" }}>\n                                    {index + 1}){\" \"}\n                                  </span>\n                                  <span style={{ fontWeight: \"600\" }}>\n                                    <Link to={`/product/${item.product.slug}`}>\n                                      {item.product.title}\n                                    </Link>{\" \"}\n                                    x {item.qty}\n                                  </span>\n                                </Col>\n                                <Col md={3}>\n                                  <span style={{ fontWeight: \"600\" }}>\n                                    =\n                                    {formatCurrency(\n                                      item.qty * item.price.price,\n                                      item.price.currency,\n                                      item.price.currencySymbol,\n                                      userLocale\n                                    )}\n                                  </span>\n                                </Col>\n                              </Row>\n                            </Col>\n                            {item.variableData && (\n                              <Col>\n                                <span style={{ fontSize: \"14px\" }}>Type:</span>{\" \"}\n                                <Badge\n                                  style={{\n                                    backgroundColor: \"#b33939\",\n                                    marginLeft: \"2px\",\n                                  }}\n                                >\n                                  {item.variableData.name}\n                                </Badge>\n                              </Col>\n                            )}\n                            {item.addonData?.length > 0 && (\n                              <>\n                                <Col>\n                                  <span style={{ fontSize: \"14px\" }}>\n                                    Addons:\n                                  </span>{\" \"}\n                                  {item.addonData.map((adn) => (\n                                    <Badge\n                                      key={adn._id}\n                                      style={{\n                                        backgroundColor: \"#FFC107\",\n                                        marginLeft: \"2px\",\n                                      }}\n                                    >\n                                      {adn.name.split(\"-\")[0]}\n                                    </Badge>\n                                  ))}\n                                </Col>\n                                <Col>\n                                  Total Addon:{\" \"}\n                                  {formatCurrency(\n                                    item.addonData.reduce((acc, item) => {\n                                      return (\n                                        acc +\n                                        item.prices.reduce(\n                                          (priceAcc, priceItem) => {\n                                            return priceAcc + priceItem.price;\n                                          },\n                                          0\n                                        )\n                                      );\n                                    }, 0),\n                                    item.price.currency,\n                                    item.price.currencySymbol,\n                                    userLocale\n                                  )}\n                                </Col>\n                              </>\n                            )}\n                          </Row>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <ListGroup style={{ backgroundColor: \"#ced6e0\" }}>\n            <ListGroup.Item>\n              <h4>Order Summary</h4>\n            </ListGroup.Item>\n            {order.couponApplied ? (\n              <>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <b>Total: </b>\n                    </Col>\n                    <Col>\n                      <del>\n                        {formatCurrency(\n                          order.cartTotal,\n                          order.currency && order.currency.currency,\n                          order.currency && order.currency.currencySymbol,\n                          userLocale\n                        )}\n                      </del>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <b>Total After Discount:</b>\n                    </Col>\n                    <Col>\n                      {order.currency && order.currency.currencySymbol}\n                      {order.totalAfterDiscount}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <b>Total Payable: </b>\n                    </Col>\n                    <Col>\n                      {order.currency &&\n                        formatCurrency(\n                          order.totalAfterDiscount,\n                          order.currency.currency,\n                          order.currency.currencySymbol,\n                          userLocale\n                        )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              </>\n            ) : (\n              <>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <b>Total: </b>\n                    </Col>\n                    <Col>\n                      {order.currency &&\n                        formatCurrency(\n                          order.cartTotal,\n                          order.currency.currency,\n                          order.currency.currencySymbol,\n                          userLocale\n                        )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <b>Total Payable: </b>\n                    </Col>\n                    <Col>\n                      {order.currency &&\n                        formatCurrency(\n                          order.cartTotal,\n                          order.currency.currency,\n                          order.currency.currencySymbol,\n                          userLocale\n                        )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              </>\n            )}\n          </ListGroup>\n\n          {userInfo && userInfo.role === \"admin\" && (\n            <ListGroup>\n              <ListGroup.Item>\n                {loadingStatus && <Loader className=\"size-sm\" />}\n                {errorStatus && (\n                  <Message variant=\"danger\">{errorStatus}</Message>\n                )}\n                <Form.Label>Update Order Status: </Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  onChange={(e) =>\n                    dispatch(updateOrderStatus(order?._id, e.target.value))\n                  }\n                  value={order?.orderStatus}\n                  style={{ backgroundColor: \"#d1d8e0\", color: \"#000\" }}\n                >\n                  <option value=\"Not Processed\">Not Processed</option>\n                  <option value=\"Processing\">Processing</option>\n                  <option value=\"Dispatched\">Dispatched</option>\n                  <option value=\"Cancelled\">Cancelled</option>\n                  <option value=\"Completed\">Completed</option>\n                </Form.Control>\n              </ListGroup.Item>\n            </ListGroup>\n          )}\n\n          {userInfo &&\n            userInfo.role === \"admin\" &&\n            order?.paymentMethod === \"Cash On Delivery\" && (\n              <ListGroup>\n                <ListGroup.Item>\n                  {loadingPayment && <Loader className=\"size-sm\" />}\n                  {errorPayment && (\n                    <Message variant=\"danger\">{errorPayment}</Message>\n                  )}\n                  <Form.Label>Update Payment Status: </Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    onChange={(e) =>\n                      dispatch(updatePaymentStatus(order?._id, e.target.value))\n                    }\n                    value={order?.paymentIntent?.status}\n                    style={{ backgroundColor: \"#d1d8e0\", color: \"#000\" }}\n                  >\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"succeeded\">Succeeded</option>\n                  </Form.Control>\n                </ListGroup.Item>\n              </ListGroup>\n            )}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderDetailsScreen;\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\nconst Message = ({ children, variant }) => {\n  return (\n    <>\n      <Alert variant={variant}>{children}</Alert>\n    </>\n  )\n}\n\nexport default Message\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nconst Loader = ({ size }) => {\n  return (\n    <>\n      <Spinner\n        animation=\"grow\"\n        variant=\"dark\"\n        // style={{ height: '100px', width: '100px' }}\n        className={size}\n      />\n    </>\n  );\n};\nLoader.defaultProps = {\n  size: \"size-md\",\n};\n\nexport default Loader;\n"],"sourceRoot":""}